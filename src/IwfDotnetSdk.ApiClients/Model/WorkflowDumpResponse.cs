/*
 * Workflow APIs
 *
 * This APIs for iwf SDKs to operate workflows
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = IwfDotnetSdk.ApiClients.Client.OpenAPIDateConverter;

namespace IwfDotnetSdk.ApiClients.Model
{
    /// <summary>
    /// WorkflowDumpResponse
    /// </summary>
    [DataContract(Name = "WorkflowDumpResponse")]
    public partial class WorkflowDumpResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowDumpResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkflowDumpResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowDumpResponse" /> class.
        /// </summary>
        /// <param name="checksum">checksum (required).</param>
        /// <param name="totalPages">totalPages (required).</param>
        /// <param name="jsonData">jsonData (required).</param>
        public WorkflowDumpResponse(string checksum = default(string), int totalPages = default(int), string jsonData = default(string))
        {
            // to ensure "checksum" is required (not null)
            if (checksum == null)
            {
                throw new ArgumentNullException("checksum is a required property for WorkflowDumpResponse and cannot be null");
            }
            this.Checksum = checksum;
            this.TotalPages = totalPages;
            // to ensure "jsonData" is required (not null)
            if (jsonData == null)
            {
                throw new ArgumentNullException("jsonData is a required property for WorkflowDumpResponse and cannot be null");
            }
            this.JsonData = jsonData;
        }

        /// <summary>
        /// Gets or Sets Checksum
        /// </summary>
        [DataMember(Name = "checksum", IsRequired = true, EmitDefaultValue = true)]
        public string Checksum { get; set; }

        /// <summary>
        /// Gets or Sets TotalPages
        /// </summary>
        [DataMember(Name = "totalPages", IsRequired = true, EmitDefaultValue = true)]
        public int TotalPages { get; set; }

        /// <summary>
        /// Gets or Sets JsonData
        /// </summary>
        [DataMember(Name = "jsonData", IsRequired = true, EmitDefaultValue = true)]
        public string JsonData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkflowDumpResponse {\n");
            sb.Append("  Checksum: ").Append(Checksum).Append("\n");
            sb.Append("  TotalPages: ").Append(TotalPages).Append("\n");
            sb.Append("  JsonData: ").Append(JsonData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
