/*
 * Workflow APIs
 *
 * This APIs for iwf SDKs to operate workflows
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = IwfDotnetSdk.ApiClients.Client.OpenAPIDateConverter;

namespace IwfDotnetSdk.ApiClients.Model
{
    /// <summary>
    /// WorkflowStateOptions
    /// </summary>
    [DataContract(Name = "WorkflowStateOptions")]
    public partial class WorkflowStateOptions : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets WaitUntilApiFailurePolicy
        /// </summary>
        [DataMember(Name = "waitUntilApiFailurePolicy", EmitDefaultValue = false)]
        public WaitUntilApiFailurePolicy? WaitUntilApiFailurePolicy { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiFailurePolicy
        /// </summary>
        [DataMember(Name = "executeApiFailurePolicy", EmitDefaultValue = false)]
        public ExecuteApiFailurePolicy? ExecuteApiFailurePolicy { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowStateOptions" /> class.
        /// </summary>
        /// <param name="searchAttributesLoadingPolicy">searchAttributesLoadingPolicy.</param>
        /// <param name="waitUntilApiSearchAttributesLoadingPolicy">waitUntilApiSearchAttributesLoadingPolicy.</param>
        /// <param name="executeApiSearchAttributesLoadingPolicy">executeApiSearchAttributesLoadingPolicy.</param>
        /// <param name="dataAttributesLoadingPolicy">dataAttributesLoadingPolicy.</param>
        /// <param name="waitUntilApiDataAttributesLoadingPolicy">waitUntilApiDataAttributesLoadingPolicy.</param>
        /// <param name="executeApiDataAttributesLoadingPolicy">executeApiDataAttributesLoadingPolicy.</param>
        /// <param name="waitUntilApiTimeoutSeconds">waitUntilApiTimeoutSeconds.</param>
        /// <param name="executeApiTimeoutSeconds">executeApiTimeoutSeconds.</param>
        /// <param name="waitUntilApiRetryPolicy">waitUntilApiRetryPolicy.</param>
        /// <param name="executeApiRetryPolicy">executeApiRetryPolicy.</param>
        /// <param name="waitUntilApiFailurePolicy">waitUntilApiFailurePolicy.</param>
        /// <param name="executeApiFailurePolicy">executeApiFailurePolicy.</param>
        /// <param name="executeApiFailureProceedStateId">executeApiFailureProceedStateId.</param>
        /// <param name="executeApiFailureProceedStateOptions">executeApiFailureProceedStateOptions.</param>
        /// <param name="skipWaitUntil">skipWaitUntil.</param>
        public WorkflowStateOptions(PersistenceLoadingPolicy searchAttributesLoadingPolicy = default(PersistenceLoadingPolicy), PersistenceLoadingPolicy waitUntilApiSearchAttributesLoadingPolicy = default(PersistenceLoadingPolicy), PersistenceLoadingPolicy executeApiSearchAttributesLoadingPolicy = default(PersistenceLoadingPolicy), PersistenceLoadingPolicy dataAttributesLoadingPolicy = default(PersistenceLoadingPolicy), PersistenceLoadingPolicy waitUntilApiDataAttributesLoadingPolicy = default(PersistenceLoadingPolicy), PersistenceLoadingPolicy executeApiDataAttributesLoadingPolicy = default(PersistenceLoadingPolicy), int waitUntilApiTimeoutSeconds = default(int), int executeApiTimeoutSeconds = default(int), RetryPolicy waitUntilApiRetryPolicy = default(RetryPolicy), RetryPolicy executeApiRetryPolicy = default(RetryPolicy), WaitUntilApiFailurePolicy? waitUntilApiFailurePolicy = default(WaitUntilApiFailurePolicy?), ExecuteApiFailurePolicy? executeApiFailurePolicy = default(ExecuteApiFailurePolicy?), string executeApiFailureProceedStateId = default(string), WorkflowStateOptions executeApiFailureProceedStateOptions = default(WorkflowStateOptions), bool skipWaitUntil = default(bool))
        {
            this.SearchAttributesLoadingPolicy = searchAttributesLoadingPolicy;
            this.WaitUntilApiSearchAttributesLoadingPolicy = waitUntilApiSearchAttributesLoadingPolicy;
            this.ExecuteApiSearchAttributesLoadingPolicy = executeApiSearchAttributesLoadingPolicy;
            this.DataAttributesLoadingPolicy = dataAttributesLoadingPolicy;
            this.WaitUntilApiDataAttributesLoadingPolicy = waitUntilApiDataAttributesLoadingPolicy;
            this.ExecuteApiDataAttributesLoadingPolicy = executeApiDataAttributesLoadingPolicy;
            this.WaitUntilApiTimeoutSeconds = waitUntilApiTimeoutSeconds;
            this.ExecuteApiTimeoutSeconds = executeApiTimeoutSeconds;
            this.WaitUntilApiRetryPolicy = waitUntilApiRetryPolicy;
            this.ExecuteApiRetryPolicy = executeApiRetryPolicy;
            this.WaitUntilApiFailurePolicy = waitUntilApiFailurePolicy;
            this.ExecuteApiFailurePolicy = executeApiFailurePolicy;
            this.ExecuteApiFailureProceedStateId = executeApiFailureProceedStateId;
            this.ExecuteApiFailureProceedStateOptions = executeApiFailureProceedStateOptions;
            this.SkipWaitUntil = skipWaitUntil;
        }

        /// <summary>
        /// Gets or Sets SearchAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "searchAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy SearchAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets WaitUntilApiSearchAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "waitUntilApiSearchAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy WaitUntilApiSearchAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiSearchAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "executeApiSearchAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy ExecuteApiSearchAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets DataAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "dataAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy DataAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets WaitUntilApiDataAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "waitUntilApiDataAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy WaitUntilApiDataAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiDataAttributesLoadingPolicy
        /// </summary>
        [DataMember(Name = "executeApiDataAttributesLoadingPolicy", EmitDefaultValue = false)]
        public PersistenceLoadingPolicy ExecuteApiDataAttributesLoadingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets WaitUntilApiTimeoutSeconds
        /// </summary>
        [DataMember(Name = "waitUntilApiTimeoutSeconds", EmitDefaultValue = false)]
        public int WaitUntilApiTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiTimeoutSeconds
        /// </summary>
        [DataMember(Name = "executeApiTimeoutSeconds", EmitDefaultValue = false)]
        public int ExecuteApiTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or Sets WaitUntilApiRetryPolicy
        /// </summary>
        [DataMember(Name = "waitUntilApiRetryPolicy", EmitDefaultValue = false)]
        public RetryPolicy WaitUntilApiRetryPolicy { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiRetryPolicy
        /// </summary>
        [DataMember(Name = "executeApiRetryPolicy", EmitDefaultValue = false)]
        public RetryPolicy ExecuteApiRetryPolicy { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiFailureProceedStateId
        /// </summary>
        [DataMember(Name = "executeApiFailureProceedStateId", EmitDefaultValue = false)]
        public string ExecuteApiFailureProceedStateId { get; set; }

        /// <summary>
        /// Gets or Sets ExecuteApiFailureProceedStateOptions
        /// </summary>
        [DataMember(Name = "executeApiFailureProceedStateOptions", EmitDefaultValue = false)]
        public WorkflowStateOptions ExecuteApiFailureProceedStateOptions { get; set; }

        /// <summary>
        /// Gets or Sets SkipWaitUntil
        /// </summary>
        [DataMember(Name = "skipWaitUntil", EmitDefaultValue = true)]
        public bool SkipWaitUntil { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkflowStateOptions {\n");
            sb.Append("  SearchAttributesLoadingPolicy: ").Append(SearchAttributesLoadingPolicy).Append("\n");
            sb.Append("  WaitUntilApiSearchAttributesLoadingPolicy: ").Append(WaitUntilApiSearchAttributesLoadingPolicy).Append("\n");
            sb.Append("  ExecuteApiSearchAttributesLoadingPolicy: ").Append(ExecuteApiSearchAttributesLoadingPolicy).Append("\n");
            sb.Append("  DataAttributesLoadingPolicy: ").Append(DataAttributesLoadingPolicy).Append("\n");
            sb.Append("  WaitUntilApiDataAttributesLoadingPolicy: ").Append(WaitUntilApiDataAttributesLoadingPolicy).Append("\n");
            sb.Append("  ExecuteApiDataAttributesLoadingPolicy: ").Append(ExecuteApiDataAttributesLoadingPolicy).Append("\n");
            sb.Append("  WaitUntilApiTimeoutSeconds: ").Append(WaitUntilApiTimeoutSeconds).Append("\n");
            sb.Append("  ExecuteApiTimeoutSeconds: ").Append(ExecuteApiTimeoutSeconds).Append("\n");
            sb.Append("  WaitUntilApiRetryPolicy: ").Append(WaitUntilApiRetryPolicy).Append("\n");
            sb.Append("  ExecuteApiRetryPolicy: ").Append(ExecuteApiRetryPolicy).Append("\n");
            sb.Append("  WaitUntilApiFailurePolicy: ").Append(WaitUntilApiFailurePolicy).Append("\n");
            sb.Append("  ExecuteApiFailurePolicy: ").Append(ExecuteApiFailurePolicy).Append("\n");
            sb.Append("  ExecuteApiFailureProceedStateId: ").Append(ExecuteApiFailureProceedStateId).Append("\n");
            sb.Append("  ExecuteApiFailureProceedStateOptions: ").Append(ExecuteApiFailureProceedStateOptions).Append("\n");
            sb.Append("  SkipWaitUntil: ").Append(SkipWaitUntil).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
